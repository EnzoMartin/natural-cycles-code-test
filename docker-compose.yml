version: "3"
services:

  # NGINX & SSL setup
  nginx-web:
    image: nginx:1.13-alpine
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: naturalcycles_nginx
    volumes:
      - /data/nginx/natural-cycles/logs/:/var/log/nginx
      - /data/nginx/natural-cycles/conf.d:/etc/nginx/conf.d
      - /data/nginx/natural-cycles/vhost.d:/etc/nginx/vhost.d
      - /data/nginx/natural-cycles/html:/usr/share/nginx/html
      - /data/nginx/natural-cycles/certs:/etc/nginx/certs:ro
      - /data/nginx/natural-cycles/htpasswd:/etc/nginx/htpasswd:ro
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - server

  nginx-gen:
    image: jwilder/docker-gen
    command: -notify-sighup naturalcycles_nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: naturalcycles_gen
    restart: always
    volumes:
      - /data/nginx/natural-cycles/conf.d:/etc/nginx/conf.d
      - /data/nginx/natural-cycles/vhost.d:/etc/nginx/vhost.d
      - /data/nginx/natural-cycles/html:/usr/share/nginx/html
      - /data/nginx/natural-cycles/certs:/etc/nginx/certs:ro
      - /data/nginx/natural-cycles/htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    networks:
      - server

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: naturalcycles_encrypt
    restart: always
    volumes:
      - /data/nginx/natural-cycles/conf.d:/etc/nginx/conf.d
      - /data/nginx/natural-cycles/vhost.d:/etc/nginx/vhost.d
      - /data/nginx/natural-cycles/html:/usr/share/nginx/html
      - /data/nginx/natural-cycles/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=naturalcycles_gen
      - NGINX_PROXY_CONTAINER=naturalcycles_nginx
      #- ACME_CA_URI=https://acme-staging.api.letsencrypt.org/directory # Staging for LetsEncrypt
    networks:
      - server

  # Application configuration and dependencies
  database:
    image: mysql:8
    environment:
      - MYSQL_DATABASE=natural-cycles
    volumes:
       - /data/mysql/natural-cycles:/var/lib/mysql
    restart: unless-stopped
    networks:
      - db
    env_file:
      - ./.env

  db_migrate:
    image: enzomartin78/natural-cycles-code-test:master-latest
    command: 'npm run db:up'
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_DATABASE=natural-cycles
      - PORT=3000
    depends_on:
      - database
    networks:
      - db
    env_file:
      - ./.env

  service:
    image: enzomartin78/natural-cycles-code-test:master-latest
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_DATABASE=natural-cycles
      - PORT=3000
      - VIRTUAL_PORT=3000
      - VIRTUAL_HOST=${HOST}
      - LETSENCRYPT_HOST=${HOST}
      - LETSENCRYPT_EMAIL=${EMAIL}
    restart: unless-stopped
    expose:
      - 3000
    depends_on:
      - database
      - nginx-gen
      - db_migrate
    networks:
      - db
      - server
    env_file:
      - ./.env

networks:
  db:
  server:
